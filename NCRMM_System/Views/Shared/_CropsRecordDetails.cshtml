@model IEnumerable<NCRMM_System.Models.StockTempRecord>


<fieldset class="col-md-12 scheduler-border">
    <legend class="scheduler-border">
        Crops Details
    </legend>
    <div class="col-md-6">
        <div class="form-group">

            <label class="control-label col-md-2">Crops Name</label>
            <div class="col-lg-8">
                @Html.DropDownList("CropsId", null, String.Empty, htmlAttributes: new {@class = "form-control"})
                @*//  @Html.ValidationMessageFor(model => model.Crops_tbl)*@
            </div>
        </div>

    </div>
    <div class="col-md-6">
        <div class="form-group">

            <label class="control-label col-md-2">Crops Catagory</label>
            <div class="col-lg-8">
                @Html.DropDownList("CropsCatagoryId", null, String.Empty, htmlAttributes: new {@class = "form-control"})
                @*@Html.ValidationMessageFor(model => model.CropsCatagoryName)*@
            </div>
        </div>

    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label class="control-label col-md-2"> Description : </label>
            <div class="col-lg-8">
                <textarea name="Description" id="description" class="form-control" cols="" rows="5"></textarea>
            </div>
        </div>

    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label class="control-label col-md-2"> Amount : </label>
            <div class="col-lg-8">
                <input name="Amount" id="cropsAmount" class="form-control"/>
            </div>
        </div>

    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add Crops Information" id="addCrops" class="btn btn-default" style="background-color: rgb(110, 179, 61);"/>
        </div>
    </div>

    <div class="col-md-12" id="list">
        <label id="tempId" style="display: none"></label>
        <table class="table table-responsive table-bordered">
            <tr>
                <th>
                    Crops Name
                </th>
                <th>
                    Crops Catagory Name
                </th>
                <th>
                    Description
                </th>
                <th>
                    Amount
                </th>
                <th>
                    Action
                </th>
            </tr>
            <tbody id="contentpart">

            </tbody>
            @*@foreach (var item in Model)
            {
                <tr>

                    <td>
                        @Html.DisplayFor(modelItem => item.CropsCatagory_tbl.Crops_tbl.CropsName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CropsCatagory_tbl.CropsCatagoryName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StockAmount)
                    </td>

                    <td>
                        @Html.ActionLink("Edit", "EditCropsInfo", new {id = item.tmpStockDetailId}, new {@class = "btn btn-primary"}) |
                        @Html.ActionLink("Delete", "DeleteCropsInfo", new {id = item.tmpStockDetailId}, new {@class = "btn btn-danger"})
                    </td>
                </tr>
            }*@
        </table>

    </div>
</fieldset>
<script>
    $(document).ready(function() {
        $("button").on('click', function (e) {
            e.preventDefault();
            var id = $(this).attr('id');
            alert(id);
        });
    })
</script>
<script>
    function showDelete(val) {
        if (val== 1) {
            $.gritter.add({
                title: 'Delete Record!',
                text: "Deleted crops information successfully!",
                sticky: false,
                // (int | optional) the time you want it to be alive for before fading out
                time: '1500'
            });
        }
    };
    function _delete(storeId) {
        var cf = confirm('Are you sure want to permanently delete this row?');
        if (cf) {
            console.log("ready to delete");
            console.log(storeId);
            $.ajax({
                url: '/StockMasterRecordCrops/CropsTempDelete/'+storeId,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
              

                success: function (result) {
                    
                    showDelete(result);
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }
    };
    
        
    $(document).ready(function () {
        $("button").on('click', function (e) {
            e.preventDefault();
            var id = $(this).attr('id');
            alert(id);
        });
        
        $(".delete .btn .btn-danger").click(function (e) {
            e.preventDefault();
            var id = $(this).attr('id');
            alert(id);

        });
        function getCropsDetails() {

            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetTempStoreCrops", "StockMasterRecordCrops")',
                datatype: 'json',
                contentType: "application/json; charset=utf-8",
                success: function(cropsRecord) {
                    var html = '';
                    var check = '';
                    console.log(cropsRecord);
                    $.each(cropsRecord, function (i, item) {
                        check += item.CropsName + " - " + item.CropsCatagoryName+" - "+item.StockAmount;
                        html += '<tr>';
                        html += '<td>' + item.CropsName + '</td>';
                        html += '<td>' + item.CropsCatagoryName + '</td>';
                        html += '<td>' + item.Description + '</td>';
                        html += '<td>' + item.StockAmount + '</td>';
                        html += '<td><a href="#" id=' + item.tmpStockDetailId + ' class="spec btn btn-success" onclick="_getById(' + item.tmpStockDetailId + ')">Edit</a> | <button  id=' + item.tmpStockDetailId + ' class="delete btn btn-danger" ">Delete</button></td>';
                        html += '</tr>';
                    });
                    console.log(check);
                    $("#contentpart").html(html);

                },
                error: function(error) {
                    alert(error);
                }
            });
        };

       
       
      
       

        $("#CropsId").change(function() {
            $("#CropsCatagoryId").empty();
            $("#CropsCatagoryId").append('<option value="0">Select One</option>');
            console.log($('#CropsId').val());
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCropsCatagory", "CropsCatagory")',
                dataType: 'json',
                data: { cropsId: $("#CropsId").val() },
                success: function (states) {
                    //alert(states);
                    console.log(states);
                    $.each(states, function (i, state) {
                        $("#CropsCatagoryId").append('<option value="' + state.Value + '">' +
                            state.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });

        getCropsDetails();

      
        $('#addCrops').on('click', function(e) {
            e.preventDefault();
            var item = {
                CatagoryId: parseInt($('#CropsCatagoryId').val()),
           
                Description: $('#description').val(),
                StockAmount:  $('#cropsAmount').val()
            }
            
            
            if (((item.CatagoryId == "0") || item.CatagoryId == "") || (item.Description == "") || (item.StockAmount == "")) {
                alert("Crops Information is missing");
            } else {
                console.log(item.CatagoryId + "-" + item.Description + "-" + item.StockAmount);
                console.log(JSON.stringify(item));
                $.ajax({
                    url: '@Url.Action("CropsTempStore","StockMasterRecordCrops")',
                    data: JSON.stringify(item),
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        getCropsDetails();
                        //console.log("updated check");
                        $('#CropsCatagoryId').val('0');
                        $('#description').val('');
                        $('#cropsAmount').val('');

                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    }
                });


               
                
            }
        });


    });


</script>


